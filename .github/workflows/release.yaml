name: 'Release'
on:
  push:
    # take no actions on push to any branch...
    branches-ignore:
      - '**'
    # ... only act on release tags
    tags:
      - 'v*'

env:
  GO_VERSION: "1.21.x"

jobs:
  wait-for-checks:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f #v4.1.3

      # we don't want to release commits that have been pushed and tagged, but not necessarily merged onto main
      - name: Ensure tagged commit is on main
        run: |
          echo "Tag: ${GITHUB_REF##*/}"
          git fetch origin main
          git merge-base --is-ancestor ${GITHUB_REF##*/} origin/main && echo "${GITHUB_REF##*/} is a commit on main!"

      - name: Check static analysis
        uses: fountainhead/action-wait-for-check@5a908a24814494009c4bb27c242ea38c93c593be #v1.2.0
        id: static-analysis
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # This check name is defined as the github actions job name (in .github/workflows/static-analysis-integration.yaml)
          checkName: "Static-Analysis (1.21.x, ubuntu-latest)"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Check unit, and integration test results
        uses: fountainhead/action-wait-for-check@5a908a24814494009c4bb27c242ea38c93c593be #v1.2.0
        id: tests-unit-int
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # This check name is defined as the github actions job name (in .github/workflows/static-analysis-integration.yaml)
          checkName: "Tests (1.21.x, ubuntu-latest)"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Quality gate
        if: steps.static-analysis.outputs.conclusion != 'success' || steps.tests-unit-int.outputs.conclusion != 'success'
        run: |
          echo "Static-Analysis Status : ${{ steps.static-analysis.outputs.conclusion }}"
          echo "Unit/Integration Status : ${{ steps.tests-unit-int.outputs.conclusion }}"
          false

  release:
    needs: [ wait-for-checks ]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 #v5.0.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f #v4.1.3
        with:
          fetch-depth: 0

      - name: Restore bootstrap cache
        id: cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 #v4.0.2
        with:
          path: |
            ~/go/pkg/mod
            ${{ github.workspace }}/.tmp
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('Makefile') }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('Makefile') }}-
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Bootstrap dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make ci-bootstrap

      - name: Login to Docker Hub
        id: docker-login
        run: |
          echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        env:
          DOCKER_USER: ${{ secrets.ANCHOREINTEGRATIONSWRITE_DH_USERNAME }}
          DOCKER_PASS: ${{ secrets.ANCHOREINTEGRATIONSWRITE_DH_PAT }}

      - name: Build snapshot artifacts
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 #v4.3.1
        with:
          name: artifacts
          path: dist/**/*
